apiVersion: redskyops.dev/v1alpha1
kind: Experiment
metadata:
  name: locust-metrics
spec:
  optimization:
  - name: "experimentBudget"
    value: "200"
  parameters:
  - name: worker_cpu
    min: 100
    max: 1000
  - name: voting_memory
    min: 200
    max: 2000
  - name: voting_cpu
    min: 100
    max: 1000
  - name: voting_replicas
    min: 1
    max: 4
  - name: db_memory
    min: 200
    max: 2000
  metrics:
  - name: latency
    minimize: true
    type: jsonpath
    query: '{.current_response_time_percentile_95}'
    path: '/stats/requests'
    port: 8089
    selector:
      matchLabels:
        component: locust
  - name: failure-rate
    minimize: true
    type: jsonpath
    query: '{.fail_ratio}'
    path: '/stats/requests'
    port: 8089
    selector:
      matchLabels:
        component: locust
  patches:
  - targetRef:
      kind: Deployment
      apiVersion: apps/v1
      name: worker
    patch: |
      spec:
        template:
          spec:
            containers:
            - name: worker
              resources:
                limits:
                  cpu: "{{ .Values.worker_cpu }}m"
                requests:
                  cpu: "{{ .Values.worker_cpu }}m"
  - targetRef:
      kind: Deployment
      apiVersion: apps/v1
      name: voting-service
    patch: |
      spec:
        replicas: {{ .Values.voting_replicas }}
        template:
          spec:
            containers:
            - name: voting-service
              resources:
                limits:
                  cpu: "{{ .Values.voting_cpu }}m"
                  memory: "{{ .Values.voting_memory }}Mi"
                requests:
                  cpu: "{{ .Values.voting_cpu }}m"
                  memory: "{{ .Values.voting_memory }}Mi"
  - targetRef:
      kind: Deployment
      apiVersion: apps/v1
      name: db
    patch: |
      spec:
        template:
          spec:
            containers:
            - name: db
              resources:
                limits:
                  memory: "{{ .Values.db_memory }}Mi"
                requests:
                  memory: "{{ .Values.db_memory }}Mi"
  template: # trial
    spec:
      initialDelaySeconds: 15
      template: # job
        spec:
          template: # pod
            spec:
              containers:
              - name: curl
                image: byrnedo/alpine-curl
                command: ["sh", "/home/entrypoint.sh"]
                volumeMounts:
                - name: locust-entrypoint
                  mountPath: /home/entrypoint.sh
                  subPath: entrypoint.sh
              volumes:
              - name: locust-entrypoint
                configMap:
                  name: locust-entrypoint
