apiVersion: apps.redskyops.dev/v1alpha1
kind: Application
metadata:
  name: votingapp

# The resources identify where the manifests representing the application live.
# This is roughly the same as a Kustomize resources block, so you can use files,
# directories, URLs, Git repos, etc.
resources:
- https://github.com/avgKol/examples/my-nginx/application

# This section configures the objectives of optimization
# We want to minimize both cost and latency
objectives:
- name: cost-gcp # Also "cost", "cost-aws", "cpu", ...
- name: p95-latency

# Control over the discovery of parameters, also optional
# The default is to generate patches for all deployments and stateful sets
# Here we decide to only optimize the voting service respon
parameters:
  containerResources:
    labelSelector: run=my-nginx
  replicas:
    labelSelector: run=my-nginx

# This section configures the scenarios of load generation
scenarios:
- name: 30000-clients
  locust:
    users: 30000
    spawnRate: 1000
    locustfile: locustfile.py

# The host for the locust trial job
ingress:
  url:  http://my-nginx

