apiVersion: redskyops.dev/v1beta1
kind: Experiment
metadata:
  name: jvm-reactors
spec:
  constraints:
  - order:
      lowerParameter: heap_size
      upperParameter: memory
  metrics:
  - minimize: true
    name: duration
    port: 0
    query: '{{duration .StartTime .CompletionTime}}'
  - minimize: true
    name: cost
    port: 0
    query: '{{div (add (mul .Values.cpu 22) (mul .Values.memory 3)) 1000}}'
  optimization:
  - name: experimentBudget
    value: "80"
  parameters:
  - max: 12288
    min: 512
    name: heap_size
  - max: 30
    min: 10
    name: parallel_gc_threads
  - max: 8
    name: con_gc_threads
  - max: 2000
    min: 200
    name: cpu
  - max: 12288
    min: 100
    name: memory
  patches:
  - patch: |
      spec:
        template:
          spec:
            containers:
            - name: renaissance
              resources:
                limits:
                  cpu: "{{ .Values.cpu }}m"
                  memory: "{{ .Values.memory }}Mi"
                requests:
                  cpu: "{{ .Values.cpu }}m"
                  memory: "{{ .Values.memory }}Mi"
              env:
              - name: HEAP_SIZE
                value: {{ .Values.heap_size }}
              - name: CON_GC_THREADS
                value: {{ .Values.con_gc_threads }}
              - name: PARALLEL_GC_THREADS
                value: {{ .Values.parallel_gc_threads }}
    targetRef:
      apiVersion: batch/v1
      kind: Job
      name: jvm-reactors
  trialTemplate:
    spec:
      jobTemplate:
        spec:
          template: # pod
            spec:
              activeDeadlineSeconds: 1800
              containers:
              - args: ["reactors"]
                image: gcr.io/redskyops/renaissance:0.10.0
                name: renaissance
